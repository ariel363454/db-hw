#include <iostream>
using namespace std;

class CppArray {
private:
    int size;
    float* data;
public:
    CppArray(int size = 0, float initvalue = 0.0f) :size(size) {
        if(size > 0)
            data = new float[size];
        else
            data = nullptr;
        for(int i = 0;i < size;i++){
            data[i] = initvalue;
        }
    }
    CppArray(const CppArray& cp2) :size(cp2.size){
        if(size > 0){
            data = new float[size];
            for(int i = 0;i < size;i++)
                data[i] = cp2.data[i];
        }else
            data = nullptr;
    }
    ~CppArray(){
        delete[] data;
    }
    CppArray& operator=(const CppArray& cp2){
    if(this == &cp2)
        return *this;
    delete[] data;
    size = cp2.size;
    if(size > 0){
        data = new float[size];
        for(int i = 0;i < size;i++)
            data[i] = cp2.data[i];
    }else
        data = nullptr;
    return *this;
    }
    float& operator[](int i){
        if(i < 0 || i >= size)
            throw out_of_range("Index out of range!");
        return data[i];
    }
    friend istream& operator>>(istream& in, CppArray& arr);
    friend ostream& operator<<(ostream& out, CppArray& arr);
    int GetSize(){
        return size;
    }
    /*void setarr(int index, int value){
        if(index >= 1 && index-1 < size)
            data[index-1] = value;
        else{
            int i, v;
            cout << "超過陣列範圍，請重新輸入要更改的位置及值：" << endl;
            cin >> i >> v;
            setarr(i, v);
        }
    }*/
};

istream& operator>>(istream& in, CppArray& arr){
    for(int i = 0;i < arr.size;i++)
        in >> arr.data[i];
    return in;
}
ostream& operator<<(ostream& out, CppArray& arr){
    for(int i = 0;i < arr.size;i++){
        out << arr.data[i]; 
        if(i != arr.size-1)
            out << " ";
    }
    return out;
}

int main(){
    int n, i;
    float f, v;
    cout << "請輸入陣列1大小及初始值：" << endl;
    cin >> n >> f;
    CppArray arr1(n, f);
    cout << "請輸入" << n << "個整數：" << endl;
    cin >> arr1;
    cout << "將複製陣列1至陣列2" << endl;
    CppArray arr2;
    arr2 = arr1;
    cout << "請輸入要將陣列1的第幾個數字改成多少：" << endl;
    cin >> i >> v;
    arr1[i-1] = v;
    cout << "請輸入要將陣列2的第幾個數字改成多少：" << endl;
    cin >> i >> v;
    try {
        arr1[i - 1] = v;
    }catch (const out_of_range& e) {
        cout << "無法執行，原因：" << e.what() << endl;
    }
    cout << "陣列1為：" << arr1<< ", 陣列大小為" << arr1.GetSize() << endl;
    cout << "陣列2為：" << arr2<< ", 陣列大小為" << arr2.GetSize() << endl;
    
    return 0;
}
