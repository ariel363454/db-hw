#include <iostream>
#include <chrono>
#include <vector>
#include <cstdlib>
using namespace std;
using namespace std::chrono;

int BinarySearch (int *a, const int x, const int n){
    int left = 0, right = n - 1;
    while (left <= right){
    int middle = (left + right) /2;
    if (x < a [middle ]) right = middle-1;
    else if (x > a [middle ]) left = middle + 1;
    else return middle;
    }
    return -1;
}

int main(){
    int max = 100;
    int times = 10;
    
    for(int n = 0;n <= max;n++){
        vector <int> a(n);
        for(int i = 0;i < n;i++)
            a[i] = i;
        long long total;
        for(int t = 0;t < times;t++){
            int x = rand()%(n+1);
            auto start = high_resolution_clock::now();
            BinarySearch(a.data(), x, n);
            auto end = high_resolution_clock::now();
            total += duration_cast<nanoseconds>(end - start).count();
        }
        double eva = (double)total/times;
        cout << eva << endl;
    }
    
    return 0;
}
